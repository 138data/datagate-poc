<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>繝輔ぃ繧､繝ｫ邂｡逅・- 138DataGate</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Hiragino Sans', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
        }

        .header {
            background: white;
            padding: 20px 30px;
            border-radius: 15px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .header-title {
            font-size: 24px;
            font-weight: bold;
            color: #333;
        }

        .header-right {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .user-info {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .logout-btn {
            background: #ef4444;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s;
        }

        .logout-btn:hover {
            background: #dc2626;
        }

        .nav-menu {
            background: white;
            padding: 15px 30px;
            border-radius: 15px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
            display: flex;
            gap: 20px;
        }

        .nav-item {
            padding: 10px 20px;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s;
            color: #666;
            text-decoration: none;
        }

        .nav-item:hover {
            background: #f3f4f6;
            color: #667eea;
        }

        .nav-item.active {
            background: #667eea;
            color: white;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: white;
            padding: 25px;
            border-radius: 15px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .stat-card-title {
            font-size: 14px;
            color: #666;
            margin-bottom: 10px;
        }

        .stat-card-value {
            font-size: 32px;
            font-weight: bold;
            color: #333;
        }

        .content {
            background: white;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .toolbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            gap: 20px;
            flex-wrap: wrap;
        }

        .search-box {
            display: flex;
            gap: 10px;
            flex: 1;
            min-width: 300px;
        }

        .search-input {
            flex: 1;
            padding: 10px 15px;
            border: 2px solid #e5e7eb;
            border-radius: 8px;
            font-size: 14px;
        }

        .search-btn, .upload-btn, .delete-expired-btn {
            padding: 10px 20px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
            transition: all 0.3s;
        }

        .search-btn {
            background: #667eea;
            color: white;
        }

        .search-btn:hover {
            background: #5568d3;
        }

        .upload-btn {
            background: #10b981;
            color: white;
        }

        .upload-btn:hover {
            background: #059669;
        }

        .delete-expired-btn {
            background: #ef4444;
            color: white;
        }

        .delete-expired-btn:hover {
            background: #dc2626;
        }

        .table-container {
            overflow-x: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th {
            background: #f9fafb;
            padding: 15px;
            text-align: left;
            font-weight: 600;
            color: #374151;
            border-bottom: 2px solid #e5e7eb;
        }

        td {
            padding: 15px;
            border-bottom: 1px solid #e5e7eb;
        }

        tr:hover {
            background: #f9fafb;
        }

        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #9ca3af;
        }

        .empty-state-icon {
            font-size: 64px;
            margin-bottom: 20px;
        }

        .badge {
            display: inline-block;
            padding: 4px 12px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 500;
        }

        .badge-active {
            background: #d1fae5;
            color: #065f46;
        }

        .badge-expired {
            background: #fee2e2;
            color: #991b1b;
        }

        .action-btn {
            padding: 6px 12px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 12px;
            margin-right: 5px;
            transition: all 0.3s;
        }

        .download-btn {
            background: #3b82f6;
            color: white;
        }

        .download-btn:hover {
            background: #2563eb;
        }

        .delete-btn {
            background: #ef4444;
            color: white;
        }

        .delete-btn:hover {
            background: #dc2626;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            align-items: center;
            justify-content: center;
        }

        .modal.active {
            display: flex;
        }

        .modal-content {
            background: white;
            padding: 30px;
            border-radius: 15px;
            max-width: 500px;
            width: 90%;
            max-height: 90vh;
            overflow-y: auto;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .modal-title {
            font-size: 20px;
            font-weight: bold;
        }

        .close-btn {
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: #9ca3af;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #374151;
        }

        .form-input, .form-select {
            width: 100%;
            padding: 10px;
            border: 2px solid #e5e7eb;
            border-radius: 8px;
            font-size: 14px;
        }

        .file-input {
            border: 2px dashed #e5e7eb;
            padding: 30px;
            text-align: center;
            cursor: pointer;
            border-radius: 8px;
            transition: all 0.3s;
        }

        .file-input:hover {
            border-color: #667eea;
            background: #f9fafb;
        }

        .file-input input {
            display: none;
        }

        .selected-file {
            margin-top: 10px;
            padding: 10px;
            background: #f0f9ff;
            border-radius: 8px;
            color: #0369a1;
        }

        .modal-actions {
            display: flex;
            gap: 10px;
            justify-content: flex-end;
        }

        .cancel-btn, .submit-btn {
            padding: 10px 20px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
        }

        .cancel-btn {
            background: #e5e7eb;
            color: #374151;
        }

        .submit-btn {
            background: #667eea;
            color: white;
        }

        .submit-btn:hover {
            background: #5568d3;
        }

        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            border-radius: 8px;
            color: white;
            z-index: 2000;
            display: none;
            animation: slideIn 0.3s ease-out;
        }

        .notification.success {
            background: #10b981;
        }

        .notification.error {
            background: #ef4444;
        }

        .notification.active {
            display: block;
        }

        @keyframes slideIn {
            from {
                transform: translateX(400px);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1 class="header-title">刀 繝輔ぃ繧､繝ｫ邂｡逅・/h1>
            <div class="header-right">
                <div class="user-info">
                    <span id="username">admin</span>
                </div>
                <button class="logout-btn" onclick="logout()">繝ｭ繧ｰ繧｢繧ｦ繝・/button>
            </div>
        </div>

        <div class="nav-menu">
            <a href="admin.html" class="nav-item">繝繝・す繝･繝懊・繝・/a>
            <a href="admin-users.html" class="nav-item">繝ｦ繝ｼ繧ｶ繝ｼ邂｡逅・/a>
            <a href="admin-files.html" class="nav-item active">繝輔ぃ繧､繝ｫ邂｡逅・/a>
            <a href="admin-logs.html" class="nav-item">繝ｭ繧ｰ</a>
            <a href="admin-settings.html" class="nav-item">險ｭ螳・/a>
        </div>

        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-card-title">邱上ヵ繧｡繧､繝ｫ謨ｰ</div>
                <div class="stat-card-value" id="totalFiles">0</div>
            </div>
            <div class="stat-card">
                <div class="stat-card-title">邱丞ｮｹ驥・/div>
                <div class="stat-card-value" id="totalSize">0 B</div>
            </div>
            <div class="stat-card">
                <div class="stat-card-title">莉頑律縺ｮ繧｢繝・・繝ｭ繝ｼ繝・/div>
                <div class="stat-card-value" id="todayUploads">0</div>
            </div>
            <div class="stat-card">
                <div class="stat-card-title">譛滄剞蛻・ｌ繝輔ぃ繧､繝ｫ</div>
                <div class="stat-card-value" id="expiredFiles">0</div>
            </div>
        </div>

        <div class="content">
            <div class="toolbar">
                <div class="search-box">
                    <input type="text" class="search-input" id="searchInput" placeholder="繝輔ぃ繧､繝ｫ蜷阪〒讀懃ｴ｢...">
                    <button class="search-btn" onclick="searchFiles()">讀懃ｴ｢</button>
                </div>
                <div style="display: flex; gap: 10px;">
                    <button class="upload-btn" onclick="openUploadModal()">豆 繝輔ぃ繧､繝ｫ繧｢繝・・繝ｭ繝ｼ繝・/button>
                    <button class="delete-expired-btn" onclick="deleteExpired()">譛滄剞蛻・ｌ繧貞炎髯､</button>
                </div>
            </div>

            <div class="table-container">
                <table id="filesTable">
                    <thead>
                        <tr>
                            <th>繝輔ぃ繧､繝ｫ蜷・/th>
                            <th>繧ｿ繧､繝・/th>
                            <th>繧ｵ繧､繧ｺ</th>
                            <th>繧｢繝・・繝ｭ繝ｼ繝画律譎・/th>
                            <th>譛牙柑譛滄剞</th>
                            <th>繧｢繝・・繝ｭ繝ｼ繝芽・/th>
                            <th>謫堺ｽ・/th>
                        </tr>
                    </thead>
                    <tbody id="filesTableBody">
                        <tr>
                            <td colspan="7" class="empty-state">
                                <div class="empty-state-icon">働</div>
                                <div>繝輔ぃ繧､繝ｫ縺後≠繧翫∪縺帙ｓ</div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div id="uploadModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">繝輔ぃ繧､繝ｫ繧｢繝・・繝ｭ繝ｼ繝・/h2>
                <button class="close-btn" onclick="closeUploadModal()">ﾃ・/button>
            </div>

            <form id="uploadForm" onsubmit="handleUpload(event)">
                <div class="form-group">
                    <label class="form-label">繝輔ぃ繧､繝ｫ驕ｸ謚・/label>
                    <div class="file-input" onclick="document.getElementById('fileInput').click()">
                        <input type="file" id="fileInput" onchange="handleFileSelect(event)">
                        <div>梼 繧ｯ繝ｪ繝・け縺励※繝輔ぃ繧､繝ｫ繧帝∈謚・/div>
                        <div style="font-size: 12px; color: #9ca3af; margin-top: 10px;">
                            縺ｾ縺溘・縲√ヵ繧｡繧､繝ｫ繧偵ラ繝ｩ繝・げ&繝峨Ο繝・・
                        </div>
                    </div>
                    <div id="selectedFileName" class="selected-file" style="display: none;"></div>
                </div>

                <div class="form-group">
                    <label class="form-label">譛牙柑譛滄剞</label>
                    <select class="form-select" id="expiryDays">
                        <option value="1">1譌･</option>
                        <option value="3">3譌･</option>
                        <option value="7" selected>7譌･</option>
                        <option value="30">30譌･</option>
                        <option value="0">辟｡譛滄剞</option>
                    </select>
                </div>

                <div class="form-group">
                    <label class="form-label">隱ｬ譏趣ｼ井ｻｻ諢擾ｼ・/label>
                    <input type="text" class="form-input" id="fileDescription" placeholder="繝輔ぃ繧､繝ｫ縺ｮ隱ｬ譏・>
                </div>

                <div class="modal-actions">
                    <button type="button" class="cancel-btn" onclick="closeUploadModal()">繧ｭ繝｣繝ｳ繧ｻ繝ｫ</button>
                    <button type="submit" class="submit-btn">繧｢繝・・繝ｭ繝ｼ繝・/button>
                </div>
            </form>
        </div>
    </div>

    <div id="notification" class="notification"></div>
<script>
        const token = localStorage.getItem('adminToken');
        if (!token) {
            window.location.href = 'admin-login.html';
        }

        let filesData = [];

        document.addEventListener('DOMContentLoaded', () => {
            loadFiles();
        });

        function loadFiles() {
            filesData = [
                {
                    id: '1',
                    name: '繝励Ο繧ｸ繧ｧ繧ｯ繝域署譯域嶌.pdf',
                    type: 'application/pdf',
                    size: 2458624,
                    uploadedAt: '2024/10/08 14:30',
                    expiryDate: '2024/10/15',
                    uploader: 'admin',
                    expired: false
                },
                {
                    id: '2',
                    name: '隕狗ｩ肴嶌_202410.xlsx',
                    type: 'application/vnd.ms-excel',
                    size: 51200,
                    uploadedAt: '2024/10/07 10:15',
                    expiryDate: '2024/10/14',
                    uploader: 'user1',
                    expired: false
                }
            ];

            updateStats();
            renderFiles();
        }

        function updateStats() {
            const totalSize = filesData.reduce((sum, file) => sum + file.size, 0);
            
            // 莉頑律縺ｮ譌･莉倥ｒ蜿門ｾ・
            const today = new Date();
            const todayStr = today.toLocaleDateString('ja-JP'); // 萓・ "2025/10/9"
            
            // 莉頑律繧｢繝・・繝ｭ繝ｼ繝峨＆繧後◆繝輔ぃ繧､繝ｫ繧偵き繧ｦ繝ｳ繝・
            const todayFiles = filesData.filter(f => {
                // uploadedAt縺九ｉ譌･莉倬Κ蛻・□縺代ｒ謚ｽ蜃ｺ (萓・ "2024/10/08 14:30" 竊・"2024/10/08")
                const uploadDateStr = f.uploadedAt ? f.uploadedAt.split(' ')[0] : '';
                const fileDate = new Date(uploadDateStr.replace(/\//g, '-')); // "2024/10/08" 竊・Date
                
                // 蟷ｴ譛域律縺御ｸ閾ｴ縺吶ｋ縺九メ繧ｧ繝・け
                return fileDate.getFullYear() === today.getFullYear() &&
                       fileDate.getMonth() === today.getMonth() &&
                       fileDate.getDate() === today.getDate();
            }).length;
            
            const expired = filesData.filter(f => f.expired).length;

            document.getElementById('totalFiles').textContent = filesData.length;
            document.getElementById('totalSize').textContent = formatBytes(totalSize);
            document.getElementById('todayUploads').textContent = todayFiles;
            document.getElementById('expiredFiles').textContent = expired;
        }

        function renderFiles() {
            const tbody = document.getElementById('filesTableBody');
            
            if (filesData.length === 0) {
                tbody.innerHTML = `
                    <tr>
                        <td colspan="7" class="empty-state">
                            <div class="empty-state-icon">働</div>
                            <div>繝輔ぃ繧､繝ｫ縺後≠繧翫∪縺帙ｓ</div>
                        </td>
                    </tr>
                `;
                return;
            }

            tbody.innerHTML = filesData.map(file => `
                <tr>
                    <td>${file.name}</td>
                    <td>${getFileTypeIcon(file.type)}</td>
                    <td>${formatBytes(file.size)}</td>
                    <td>${file.uploadedAt}</td>
                    <td>
                        <span class="badge ${file.expired ? 'badge-expired' : 'badge-active'}">
                            ${file.expiryDate}
                        </span>
                    </td>
                    <td>${file.uploader}</td>
                    <td>
                        <button class="action-btn download-btn" onclick="downloadFile('${file.id}')">
                            繝繧ｦ繝ｳ繝ｭ繝ｼ繝・
                        </button>
                        <button class="action-btn delete-btn" onclick="deleteFile('${file.id}')">
                            蜑企勁
                        </button>
                    </td>
                </tr>
            `).join('');
        }

        function getFileTypeIcon(type) {
            if (type.includes('pdf')) return '塘 PDF';
            if (type.includes('image')) return '名・・逕ｻ蜒・;
            if (type.includes('excel') || type.includes('spreadsheet')) return '投 Excel';
            if (type.includes('word') || type.includes('document')) return '統 Word';
            if (type.includes('zip') || type.includes('rar')) return '逃 蝨ｧ邵ｮ';
            return '梼 繝輔ぃ繧､繝ｫ';
        }

        function formatBytes(bytes) {
            if (bytes === 0) return '0 B';
            const k = 1024;
            const sizes = ['B', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return Math.round(bytes / Math.pow(k, i) * 100) / 100 + ' ' + sizes[i];
        }

        function openUploadModal() {
            document.getElementById('uploadModal').classList.add('active');
        }

        function closeUploadModal() {
            document.getElementById('uploadModal').classList.remove('active');
            document.getElementById('uploadForm').reset();
            document.getElementById('selectedFileName').style.display = 'none';
        }

        function handleFileSelect(event) {
            const file = event.target.files[0];
            if (file) {
                document.getElementById('selectedFileName').textContent = `驕ｸ謚・ ${file.name} (${formatBytes(file.size)})`;
                document.getElementById('selectedFileName').style.display = 'block';
            }
        }

        function handleUpload(event) {
            event.preventDefault();
            
            const fileInput = document.getElementById('fileInput');
            const file = fileInput.files[0];
            
            if (!file) {
                showNotification('繝輔ぃ繧､繝ｫ繧帝∈謚槭＠縺ｦ縺上□縺輔＞', 'error');
                return;
            }

            const newFile = {
                id: Date.now().toString(),
                name: file.name,
                type: file.type,
                size: file.size,
                uploadedAt: new Date().toLocaleString('ja-JP'),
                expiryDate: calculateExpiryDate(document.getElementById('expiryDays').value),
                uploader: 'admin',
                expired: false
            };

            filesData.unshift(newFile);
            updateStats();
            renderFiles();
            closeUploadModal();
            showNotification('繝輔ぃ繧､繝ｫ繧偵い繝・・繝ｭ繝ｼ繝峨＠縺ｾ縺励◆', 'success');
        }

        function calculateExpiryDate(days) {
            if (days === '0') return '辟｡譛滄剞';
            const date = new Date();
            date.setDate(date.getDate() + parseInt(days));
            return date.toLocaleDateString('ja-JP');
        }

        function downloadFile(id) {
            const file = filesData.find(f => f.id === id);
            if (file) {
                showNotification(`${file.name} 繧偵ム繧ｦ繝ｳ繝ｭ繝ｼ繝峨＠縺ｾ縺励◆`, 'success');
            }
        }

        function deleteFile(id) {
            if (confirm('縺薙・繝輔ぃ繧､繝ｫ繧貞炎髯､縺励※繧ゅｈ繧阪＠縺・〒縺吶°・・)) {
                filesData = filesData.filter(f => f.id !== id);
                updateStats();
                renderFiles();
                showNotification('繝輔ぃ繧､繝ｫ繧貞炎髯､縺励∪縺励◆', 'success');
            }
        }

        function deleteExpired() {
            const expiredCount = filesData.filter(f => f.expired).length;
            if (expiredCount === 0) {
                showNotification('譛滄剞蛻・ｌ縺ｮ繝輔ぃ繧､繝ｫ縺ｯ縺ゅｊ縺ｾ縺帙ｓ', 'error');
                return;
            }

            if (confirm(`${expiredCount}莉ｶ縺ｮ譛滄剞蛻・ｌ繝輔ぃ繧､繝ｫ繧貞炎髯､縺励※繧ゅｈ繧阪＠縺・〒縺吶°・歔)) {
                filesData = filesData.filter(f => !f.expired);
                updateStats();
                renderFiles();
                showNotification('譛滄剞蛻・ｌ繝輔ぃ繧､繝ｫ繧貞炎髯､縺励∪縺励◆', 'success');
            }
        }

        function searchFiles() {
            const query = document.getElementById('searchInput').value.toLowerCase();
            if (!query) {
                renderFiles();
                return;
            }

            const filtered = filesData.filter(f => 
                f.name.toLowerCase().includes(query) ||
                f.uploader.toLowerCase().includes(query)
            );

            const tbody = document.getElementById('filesTableBody');
            if (filtered.length === 0) {
                tbody.innerHTML = `
                    <tr>
                        <td colspan="7" class="empty-state">
                            <div>讀懃ｴ｢邨先棡縺後≠繧翫∪縺帙ｓ</div>
                        </td>
                    </tr>
                `;
            } else {
                tbody.innerHTML = filtered.map(file => `
                    <tr>
                        <td>${file.name}</td>
                        <td>${getFileTypeIcon(file.type)}</td>
                        <td>${formatBytes(file.size)}</td>
                        <td>${file.uploadedAt}</td>
                        <td>
                            <span class="badge ${file.expired ? 'badge-expired' : 'badge-active'}">
                                ${file.expiryDate}
                            </span>
                        </td>
                        <td>${file.uploader}</td>
                        <td>
                            <button class="action-btn download-btn" onclick="downloadFile('${file.id}')">
                                繝繧ｦ繝ｳ繝ｭ繝ｼ繝・
                            </button>
                            <button class="action-btn delete-btn" onclick="deleteFile('${file.id}')">
                                蜑企勁
                            </button>
                        </td>
                    </tr>
                `).join('');
            }
        }

        function showNotification(message, type) {
            const notification = document.getElementById('notification');
            notification.textContent = message;
            notification.className = `notification ${type} active`;
            
            setTimeout(() => {
                notification.classList.remove('active');
            }, 3000);
        }

        function logout() {
            if (confirm('繝ｭ繧ｰ繧｢繧ｦ繝医＠縺ｾ縺吶°・・)) {
                localStorage.removeItem('adminToken');
                window.location.href = 'admin-login.html';
            }
        }
    </script>
</body>
</html>
