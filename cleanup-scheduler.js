// cleanup-scheduler.js
// Ëá™Âãï„ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó„ÅÆÂÆöÊúüÂÆüË°å„Çπ„Ç±„Ç∏„É•„Éº„É©„Éº

import cleanup from './auto-cleanup.js';
import fs from 'fs';
import path from 'path';

const SETTINGS_FILE = path.join(process.cwd(), 'config', 'settings.json');
const INTERVAL_MINUTES = 5; // ÂÆüË°åÈñìÈöîÔºàÂàÜÔºâ

// „Éá„Éï„Ç©„É´„ÉàË®≠ÂÆö
const DEFAULT_SETTINGS = {
    autoDelete: true
};

// Ë®≠ÂÆö„ÇíË™≠„ÅøËæº„ÇÄ
function loadSettings() {
    try {
        if (fs.existsSync(SETTINGS_FILE)) {
            const data = fs.readFileSync(SETTINGS_FILE, 'utf8');
            return JSON.parse(data);
        }
    } catch (error) {
        console.error('Ë®≠ÂÆö„Éï„Ç°„Ç§„É´„ÅÆË™≠„ÅøËæº„Åø„Ç®„É©„Éº:', error);
    }
    return DEFAULT_SETTINGS;
}

// Ê¨°ÂõûÂÆüË°åÊôÇÂàª„ÇíË°®Á§∫
function showNextRunTime() {
    const nextRun = new Date(Date.now() + INTERVAL_MINUTES * 60 * 1000);
    console.log(`‚è∞ Ê¨°ÂõûÂÆüË°å‰∫àÂÆö: ${nextRun.toLocaleString('ja-JP')}`);
}

// ÂÆöÊúüÂÆüË°å„ÇíÈñãÂßã
async function startScheduler() {
    console.log('========================================');
    console.log('üöÄ Ëá™Âãï„ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó„Çπ„Ç±„Ç∏„É•„Éº„É©„ÉºËµ∑Âãï');
    console.log(`üìÖ ÂÆüË°åÈñìÈöî: ${INTERVAL_MINUTES}ÂàÜ`);
    console.log('========================================\n');

    // ÂàùÂõûÂÆüË°å
    try {
        const settings = loadSettings();
        if (settings.autoDelete) {
            await cleanup();
        } else {
            console.log('‚ö†Ô∏è  Ëá™ÂãïÂâäÈô§„ÅØÁÑ°Âäπ„Å´Ë®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Åæ„Åô');
        }
    } catch (error) {
        console.error('‚ùå „ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó„Ç®„É©„Éº:', error);
    }

    showNextRunTime();

    // ÂÆöÊúüÂÆüË°å„ÇíË®≠ÂÆö
    setInterval(async () => {
        try {
            const settings = loadSettings();
            if (settings.autoDelete) {
                await cleanup();
            } else {
                console.log('\n‚ö†Ô∏è  Ëá™ÂãïÂâäÈô§„ÅØÁÑ°Âäπ„Å´Ë®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Åæ„Åô');
            }
        } catch (error) {
            console.error('‚ùå „ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó„Ç®„É©„Éº:', error);
        }
        showNextRunTime();
    }, INTERVAL_MINUTES * 60 * 1000);

    // „Éó„É≠„Çª„ÇπÁµÇ‰∫ÜÊôÇ„ÅÆÂá¶ÁêÜ
    process.on('SIGINT', () => {
        console.log('\n\nüõë „Çπ„Ç±„Ç∏„É•„Éº„É©„Éº„ÇíÂÅúÊ≠¢„Åó„Åæ„Åô...');
        process.exit(0);
    });

    process.on('SIGTERM', () => {
        console.log('\n\nüõë „Çπ„Ç±„Ç∏„É•„Éº„É©„Éº„ÇíÂÅúÊ≠¢„Åó„Åæ„Åô...');
        process.exit(0);
    });
}

// „É°„Ç§„É≥Âá¶ÁêÜ
if (process.argv.includes('--once')) {
    // 1Âõû„Å†„ÅëÂÆüË°å
    console.log('üîÑ ÂçòÁô∫ÂÆüË°å„É¢„Éº„Éâ');
    cleanup()
        .then(() => {
            console.log('‚úÖ „ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„ÉóÂÆå‰∫Ü');
            process.exit(0);
        })
        .catch(error => {
            console.error('‚ùå „Ç®„É©„Éº:', error);
            process.exit(1);
        });
} else {
    // „Çπ„Ç±„Ç∏„É•„Éº„É©„Éº„ÇíÈñãÂßã
    startScheduler().catch(error => {
        console.error('‚ùå „Çπ„Ç±„Ç∏„É•„Éº„É©„ÉºËµ∑Âãï„Ç®„É©„Éº:', error);
        process.exit(1);
    });
}
