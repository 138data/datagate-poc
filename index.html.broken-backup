<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ファイルアップロード - 138DataGate</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        body {
            font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }
        .container {
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
            padding: 40px;
            max-width: 600px;
            width: 100%;
        }
        h1 {
            color: #333;
            text-align: center;
            margin-bottom: 30px;
            font-size: 28px;
        }
        .upload-area {
            border: 3px dashed #667eea;
            border-radius: 15px;
            padding: 40px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s;
            background: #f8f9fa;
        }
        .upload-area:hover {
            border-color: #764ba2;
            background: #f0f0f0;
        }
        input[type="file"] {
            display: none;
        }
        .btn {
            background: #667eea;
            color: white;
            padding: 12px 30px;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            cursor: pointer;
            margin-top: 20px;
        }
        .btn:hover {
            background: #764ba2;
        }
        .result {
            margin-top: 20px;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 10px;
            display: none;
        }
        .result.show {
            display: block;
        }
        .success {
            background: #d4edda;
            border: 1px solid #c3e6cb;
            color: #155724;
        }
        .error {
            background: #f8d7da;
            border: 1px solid #f5c6cb;
            color: #721c24;
        }
        .otp {
            font-size: 24px;
            font-weight: bold;
            color: #667eea;
            letter-spacing: 3px;
            margin: 10px 0;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>🔒 138DataGate</h1>
        <h2 style="text-align: center; color: #666; margin-bottom: 30px;">セキュアなファイル転送サービス</h2>
        
        <form id="uploadForm" enctype="multipart/form-data">
            <div class="upload-area" onclick="document.getElementById('fileInput').click()">
                <p style="font-size: 48px; margin-bottom: 10px;">📁</p>
                <p>クリックしてファイルを選択</p>
                <p style="color: #999; font-size: 14px; margin-top: 10px;">または、ファイルをドラッグ＆ドロップ</p>
                <p style="color: #999; font-size: 12px; margin-top: 5px;">最大50MBまで</p>
            </div>
            <input type="file" id="fileInput" required>
            
            <div id="fileInfo" style="margin-top: 20px; display: none;">
                <p>選択ファイル: <span id="fileName"></span></p>
                <p>サイズ: <span id="fileSize"></span></p>
            </div>
            
            <button type="submit" class="btn" style="display: none; width: 100%;" id="uploadBtn">
                アップロード
            </button>
        </form>
        
        <div id="result" class="result"></div>
    </div>

    <script>
        const fileInput = document.getElementById('fileInput');
        const fileName = document.getElementById('fileName');
        const fileSize = document.getElementById('fileSize');
        const fileInfo = document.getElementById('fileInfo');
        const uploadBtn = document.getElementById('uploadBtn');
        const uploadForm = document.getElementById('uploadForm');
        const resultDiv = document.getElementById('result');

        fileInput.addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (file) {
                fileName.textContent = file.name;
                fileSize.textContent = formatBytes(file.size);
                fileInfo.style.display = 'block';
                uploadBtn.style.display = 'block';
            }
        });

        function formatBytes(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }

        uploadForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData();
            formData.append('file', fileInput.files[0]);
            
            uploadBtn.disabled = true;
            uploadBtn.textContent = 'アップロード中...';
            
            try {
                const response = await fetch('/api/upload', {
                    method: 'POST',
                    body: formData
                });
                
                const data = await response.json();
                
                if (data.success) {
                    resultDiv.className = 'result success show';
                    resultDiv.innerHTML = `
                        <h3>✅ アップロード成功！</h3>
                        <p>ファイルID: ${data.fileId}</p>
                        <p>OTP (ワンタイムパスワード):</p>
                        <p class="otp">${data.otp}</p>
                        <p style="margin-top: 15px;">
                            <a href="/download.html?id=${data.fileId}" target="_blank" style="color: #667eea;">
                                ダウンロードページを開く →
                            </a>
                        </p>
                    `;
                    uploadForm.reset();
                    fileInfo.style.display = 'none';
                    uploadBtn.style.display = 'none';
                } else {
                    resultDiv.className = 'result error show';
                    resultDiv.innerHTML = `<h3>❌ エラー</h3><p>${data.error}</p>`;
                }
            } catch (error) {
                resultDiv.className = 'result error show';
                resultDiv.innerHTML = `<h3>❌ エラー</h3><p>${error.message}</p>`;
            } finally {
                uploadBtn.disabled = false;
                uploadBtn.textContent = 'アップロード';
            }
        });

        // ドラッグ&ドロップ対応
        const uploadArea = document.querySelector('.upload-area');
        
        uploadArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadArea.style.borderColor = '#764ba2';
        });
        
        uploadArea.addEventListener('dragleave', (e) => {
            e.preventDefault();
            uploadArea.style.borderColor = '#667eea';
        });
        
        uploadArea.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadArea.style.borderColor = '#667eea';
            
            const files = e.dataTransfer.files;
            if (files.length > 0) {
                fileInput.files = files;
                const event = new Event('change', { bubbles: true });
                fileInput.dispatchEvent(event);
            }
        });
    </script>
</body>
</html>
